// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum type_user{
  admin
  user
}

enum type_phone{
  casa
  trabalho
  celular
}

enum type_address{
  casa
  trabalho
}

enum type_game{
  playing
  played
  whishlist
}

model tb_user {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  cpf String @unique
  age Int
  password String
  phones tb_phone[]
  addresses tb_address[]
  type type_user @default(user)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model tb_phone{
  id Int @id @default(autoincrement())
  country_code String
  area_code String
  phone String
  type type_phone
  user_id Int
  user tb_user @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model tb_address{
  id Int @id @default(autoincrement())
  street String
  number String
  complement String?
  neighborhood String
  city String
  state String
  country String
  type type_address
  user_id Int
  user tb_user @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}